<#@ template language="C#" hostspecific="true" #>
<#@ Output Extension="cs" #>
<#@ parameter type="System.String" name="FieldName" #>
<#@ parameter type="System.String" name="Module" #>
<#@ parameter type="System.Collections.Generic.Dictionary<System.String,System.String>" name="Properties" #>
<#@ parameter type="System.String" name="Feature" #>
<#@ parameter type="System.Boolean" name="HasFeature" #>
using System;
using Orchard.ContentManagement;
using Orchard.ContentManagement.FieldStorage;
<# if(HasFeature) { #>
using Orchard.Environment.Extensions;
<# } #>

// This code was generated by Orchardizer

namespace <#= Module #>.Fields {
<# if(HasFeature) { #>
    [OrchardFeature("<#= Feature #>")]
<# } #>
    public class <#= FieldName #> : ContentField {
<#  foreach(var property in Properties) { #>
        public <#=  property.Value #> <#= property.Key #> { 
			get { return Storage.Get<<#=  property.Value #>>(); } 
			set { Storage.Set(value); } // potentially need to check for null here e.g. value ?? String.Empty
<# } #>
    }
}