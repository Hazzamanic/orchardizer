<#@ template language="C#" hostspecific="true" #>
<#@ Output Extension="cs" #>
<#@ parameter type="System.String" name="PartName" #>
<#@ parameter type="System.String" name="Module" #>
<#@ parameter type="System.String" name="Description" #>
<#@ parameter type="System.Boolean" name="Attachable" #>
<#@ parameter type="System.Boolean" name="RecordStorage" #>
<#@ parameter type="System.Boolean" name="CreateWidget" #>
<#@ parameter type="System.String" name="MigrationName" #>
<#@ parameter type="System.String" name="WidgetName" #>
<#@ parameter type="System.Collections.Generic.Dictionary<System.String,System.String>" name="Properties" #>
<#@ parameter type="System.String" name="Feature" #>
<#@ parameter type="System.Boolean" name="HasFeature" #>
using Orchard.ContentManagement.MetaData;
using Orchard.Core.Contents.Extensions;
using Orchard.Data.Migration;
<# if(HasFeature) { #>
using Orchard.Environment.Extensions;
<# } #>

// This code was generated by Orchardizer
namespace <#= Module #>
{
<# if(HasFeature) { #>
	[OrchardFeature("<#= Feature #>")]
<# } #>
    public class <#= MigrationName #> : DataMigrationImpl {
            public int Create() {
<# if(Attachable) { #>
            ContentDefinitionManager.AlterPartDefinition("<#= PartName #>", builder => builder
                .Attachable();
                .WithDescription("<#= Description #>")
            );
<# } #>

<# if(RecordStorage) { #>
            SchemaBuilder.CreateTable("<#= PartName #>Record", table => table
                .ContentPartRecord()
<# foreach(var prop in Properties) { #>
                .Column<<#= prop.Value #>>("<#= prop.Key #>")
<# } #>
            );
<# } #>

<# if(CreateWidget) { #>
            ContentDefinitionManager.AlterTypeDefinition("<#= WidgetName #>", type => type
                .WithPart("WidgetPart")
                .WithPart("CommonPart")
                .WithPart("<#= PartName #>")
                .WithSetting("Stereotype", "Widget")
            );
<# } #>
            return 1;
        }
    }
}
